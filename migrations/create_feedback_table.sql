-- Drop the table if it exists
drop table if exists public.feedback;

-- Create the feedback table in the public schema
create table public.feedback (
    id bigint generated by default as identity primary key,
    feedback_text text not null,
    user_verdict text not null check (user_verdict in ('approved', 'rejected', 'pending')),
    user_id bigint,
    result_id bigint,
    feedback_date timestamp with time zone default timezone('utc'::text, now()) not null,
    created_at timestamp with time zone default timezone('utc'::text, now())
);

-- Enable RLS
alter table public.feedback enable row level security;

-- Create an index on user_id for better performance
create index if not exists feedback_user_id_idx on public.feedback(user_id);

-- Drop existing policies if they exist
drop policy if exists "Enable insert for anon" on public.feedback;
drop policy if exists "Enable select for anon" on public.feedback;

-- Create policies that allow anonymous access (since we're using anon key)
create policy "Enable insert for anon"
    on public.feedback
    for insert
    to anon
    with check (true);

create policy "Enable select for anon"
    on public.feedback
    for select
    to anon
    using (true);

-- Grant necessary permissions
grant usage on schema public to anon, authenticated;
grant all on public.feedback to anon, authenticated;
grant usage, select on sequence public.feedback_id_seq to anon, authenticated;
